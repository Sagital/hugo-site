image: docker:19.03.12

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2375 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2375
  #
  DOCKER_HOST: tcp://docker:2375
  #
  # This will instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

services:
  - docker:19.03.12-dind

build:
  stage: build
  # remember to use specific version in your build images
  # see https://blog.callr.tech/building-docker-images-with-gitlab-ci-best-practices/
  image: docker:18-git 
  # we only build the "master" branch
  only:
    - master
  # fetching submodules here because usually themes are git submodules
  # see also the commented variables below

  before_script:
    - docker info

  script:
    - echo -n $SAGITAL_REGISTRY_PASSWORD | docker login -u $SAGITAL_REGISTRY_USER --password-stdin $CI_REGISTRY
    # the image is tagged as latest, because it is the master branch
    - docker build -t sagital/hugo-site:latest .
    - docker tag sagital/hugo-site:latest registry.sagital.ro/sagital/hugo-site:v1.1
    - docker tag sagital/hugo-site:latest registry.sagital.ro/sagital/hugo-site:latest
    - docker push registry.sagital.ro/sagital/hugo-site
  # variables:
  #   GIT_SUBMODULE_STRATEGY: recursive
  # -> this did not work for us, we had to use before_script above.
  # -> SSL certificate problem: unable to get local issuer certificate
  # -> https://gitlab.com/gitlab-org/gitlab-runner/issues/2148?
  # -> maybe an http proxy issue specific to our platform.

